#!/usr/bin/env bash

# Benchmark info
echo "TIMING - Starting main script at: $(date)"

# Set working directory to home directory
cd "${HOME}"

#
# Start Jupyter Notebook Server
#

# Purge the module environment to avoid conflicts
module purge

<%- unless context.ec_modulepath.blank? -%>
# Load the require modules
module use -a <%= context.ec_modulepath %>
<%- end -%>

<%- unless context.ec_modules.blank? -%>
# Load the require modules
module load <%= context.ec_modules %>
<%- end -%>

<%- if context.ec_alacarte == "gpu" -%>
#module load CUDA/12.0.0
<%- end -%>

# List loaded modules
module list

# Benchmark info
echo "TIMING - Starting jupyter at: $(date)"

# Launch the Jupyter Notebook Server
set -x

export JUPYTERLAB_SETTINGS_DIR=${HOME}/.jupyter/lab/user-settings/

<%- if context.auto_modules_JupyterLab.blank? -%>

  <%- case context.jupyter_version -%>
    <%- when 'venv' -%>
      module load <%= context.auto_modules_Python %>
      source <%= context.env_path %>/bin/activate
    <%- when 'conda' -%>
      module --latest load Miniconda3
      conda activate <%= context.env_path %>
  <%- end -%>
<%- else -%>
#    module --latest load jupyterlmod
    module load <%= context.auto_modules_JupyterLab %>
<%- end -%>

# Add option for user to provide venv
#if ! [ -d ${virtualenvpath} ]; then
#	python -m venv ${virtualenvpath}
#fi

#source ${virtualenvpath}/bin/activate

<%- if context.jupyter_variant == "1" -%>
jupyter lab --config="${CONFIG_FILE}" <%= context.ec_extra_jupyter_args %>
<%- end -%>

<%- if context.jupyter_variant == "0" -%>
jupyter notebook --config="${CONFIG_FILE}" <%= context.ec_extra_jupyter_args %>
<%- end -%>
